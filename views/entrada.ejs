<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Registrar Entrada</title>
  
  <!-- Bootstrap 5 CSS (CDN) -->
  <link
    href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"
    rel="stylesheet"
    integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH"
    crossorigin="anonymous"
  />
  
  <link rel="stylesheet" href="/css/estilos.css">

  <style>
    /* Fondo consistente con el panel de admin */
    body {
      background: #1a2a3a;
      color: #fff;
      margin: 0;
      padding: 0;
      min-height: 100vh;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    /* Contenedor principal centrado */
    .form-container {
      max-width: 600px;
      margin: 3rem auto;
      padding: 2rem;
      background: rgba(255, 255, 255, 0.95);
      border-radius: 12px;
      box-shadow: 0 8px 25px rgba(0, 0, 0, 0.3);
      backdrop-filter: blur(10px);
    }

    /* Título principal */
    .form-title {
      font-size: 2rem;
      font-weight: bold;
      color: #111;
      text-align: center;
      margin-bottom: 2rem;
      border-bottom: 3px solid #03e9f4;
      padding-bottom: 1rem;
      display: flex;
      align-items: center;
      justify-content: center;
      gap: 0.5rem;
    }

    /* Formulario */
    .form-group {
      margin-bottom: 2rem;
    }

    .form-label {
      display: block;
      font-weight: 600;
      color: #333;
      margin-bottom: 0.75rem;
      font-size: 1.1rem;
      text-transform: uppercase;
      letter-spacing: 0.5px;
    }

    .form-input {
      width: 100%;
      padding: 1rem 1.25rem;
      border: 2px solid #e0e0e0;
      border-radius: 8px;
      font-size: 1.1rem;
      font-weight: 500;
      color: #333;
      background: #fff;
      transition: all 0.3s ease;
      font-family: 'Courier New', monospace;
      text-transform: uppercase;
      letter-spacing: 1px;
    }

    .form-input:focus {
      outline: none;
      border-color: #03e9f4;
      box-shadow: 0 0 0 3px rgba(3, 233, 244, 0.2);
      background: #f8fffe;
    }

    .form-input::placeholder {
      color: #999;
      font-style: italic;
      text-transform: none;
      letter-spacing: normal;
    }

    /* Botón principal */
    .btn-primary-custom {
      width: 100%;
      padding: 1rem 2rem;
      background: linear-gradient(45deg, #03e9f4, #02d4e6);
      border: none;
      border-radius: 8px;
      color: #111;
      font-size: 1.1rem;
      font-weight: 600;
      text-transform: uppercase;
      letter-spacing: 1px;
      cursor: pointer;
      transition: all 0.3s ease;
      box-shadow: 0 4px 15px rgba(3, 233, 244, 0.3);
    }

    .btn-primary-custom:hover {
      transform: translateY(-2px);
      box-shadow: 0 6px 20px rgba(3, 233, 244, 0.4);
      background: linear-gradient(45deg, #02d4e6, #03e9f4);
    }

    .btn-primary-custom:active {
      transform: translateY(0);
    }

    /* Enlace de vuelta */
    .back-link {
      display: inline-flex;
      align-items: center;
      gap: 0.5rem;
      color: #03e9f4;
      text-decoration: none;
      font-weight: 500;
      margin-top: 2rem;
      padding: 0.75rem 1.5rem;
      border: 1px solid #03e9f4;
      border-radius: 6px;
      transition: all 0.3s ease;
      background: transparent;
    }

    .back-link:hover {
      background: #03e9f4;
      color: #111;
      text-decoration: none;
      transform: translateX(-3px);
      box-shadow: 0 2px 10px rgba(3, 233, 244, 0.3);
    }

    /* Contenedor del enlace centrado */
    .back-container {
      text-align: center;
      margin-top: 2rem;
    }

    /* Efectos adicionales */
    .form-container::before {
      content: '';
      position: absolute;
      top: -2px;
      left: -2px;
      right: -2px;
      bottom: -2px;
      background: linear-gradient(45deg, #03e9f4, #02d4e6, #03e9f4);
      border-radius: 14px;
      z-index: -1;
      opacity: 0.1;
    }

    /* Animación de entrada */
    .form-container {
      animation: slideInUp 0.6s ease-out;
      position: relative;
    }

    @keyframes slideInUp {
      from {
        opacity: 0;
        transform: translateY(30px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    /* Responsive */
    @media (max-width: 768px) {
      .form-container {
        margin: 1.5rem;
        padding: 1.5rem;
      }
      
      .form-title {
        font-size: 1.5rem;
      }
    }

    /* Indicador de campo requerido */
    .required-indicator {
      color: #e74c3c;
      margin-left: 0.25rem;
    }

    /* Mensaje de ayuda */
    .help-text {
      font-size: 0.9rem;
      color: #666;
      margin-top: 0.5rem;
      font-style: italic;
    }

    /* Estilos para las pestañas */
    .tabs-container {
      display: flex;
      margin-bottom: 2rem;
      border-radius: 8px;
      overflow: hidden;
      box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    }

    .tab-btn {
      flex: 1;
      padding: 1rem;
      border: none;
      background: #f8f9fa;
      color: #666;
      font-weight: 600;
      cursor: pointer;
      transition: all 0.3s ease;
      border-bottom: 3px solid transparent;
    }

    .tab-btn.active {
      background: #03e9f4;
      color: #111;
      border-bottom-color: #02d4e6;
    }

    .tab-btn:hover:not(.active) {
      background: #e9ecef;
      color: #333;
    }

    /* Contenido de las pestañas */
    .tab-content {
      display: none;
    }

    .tab-content.active {
      display: block;
    }

    /* Estilos para la sección de cámara */
    .camera-section {
      text-align: center;
    }

    .video-container {
      margin-bottom: 1.5rem;
      border-radius: 12px;
      overflow: hidden;
      box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
      background: #000;
      position: relative;
    }

    #video {
      width: 100%;
      max-width: 500px;
      height: auto;
      display: block;
    }

    #canvas {
      width: 100%;
      max-width: 500px;
      border: 2px solid #03e9f4;
      border-radius: 8px;
    }

    .camera-controls {
      margin-bottom: 1.5rem;
    }

    .btn-camera {
      padding: 1rem 2rem;
      background: linear-gradient(45deg, #ff6b35, #f7931e);
      border: none;
      border-radius: 8px;
      color: #fff;
      font-size: 1.1rem;
      font-weight: 600;
      text-transform: uppercase;
      letter-spacing: 1px;
      cursor: pointer;
      transition: all 0.3s ease;
      box-shadow: 0 4px 15px rgba(255, 107, 53, 0.3);
    }

    .btn-camera:hover {
      transform: translateY(-2px);
      box-shadow: 0 6px 20px rgba(255, 107, 53, 0.4);
      background: linear-gradient(45deg, #f7931e, #ff6b35);
    }

    .btn-camera:active {
      transform: translateY(0);
    }

    /* Resultado de la detección */
    .resultado-container {
      margin: 1.5rem 0;
      padding: 1rem;
      border-radius: 8px;
      font-weight: 600;
      font-size: 1.1rem;
      min-height: 50px;
      display: flex;
      align-items: center;
      justify-content: center;
    }

    .resultado-container:empty {
      display: none;
    }

    .resultado-container.success {
      background: linear-gradient(45deg, #28a745, #20c997);
      color: #fff;
      box-shadow: 0 2px 10px rgba(40, 167, 69, 0.3);
    }

    .resultado-container.error {
      background: linear-gradient(45deg, #dc3545, #e74c3c);
      color: #fff;
      box-shadow: 0 2px 10px rgba(220, 53, 69, 0.3);
    }

    .resultado-container.processing {
      background: linear-gradient(45deg, #ffc107, #ffca2c);
      color: #111;
      box-shadow: 0 2px 10px rgba(255, 193, 7, 0.3);
    }

    /* Loading spinner */
    .spinner {
      display: inline-block;
      width: 20px;
      height: 20px;
      border: 3px solid #f3f3f3;
      border-top: 3px solid #111;
      border-radius: 50%;
      animation: spin 1s linear infinite;
      margin-right: 0.5rem;
    }

    @keyframes spin {
      0% { transform: rotate(0deg); }
      100% { transform: rotate(360deg); }
    }
  </style>
</head>
<body>
  <div class="form-container">
    <h2 class="form-title">
      🚗 Registrar Entrada de Vehículo
    </h2>
    
    <!-- Pestañas para alternar entre manual y cámara -->
    <div class="tabs-container">
      <button type="button" class="tab-btn active" data-tab="manual">
        ✍️ Manual
      </button>
      <button type="button" class="tab-btn" data-tab="camera">
        📸 Cámara
      </button>
    </div>

    <!-- Contenido Manual -->
    <div id="manual-tab" class="tab-content active">
      <form action="/vehiculos/entrada" method="POST">
        <div class="form-group">
          <label for="placa" class="form-label">
            Placa del Vehículo
            <span class="required-indicator">*</span>
          </label>
          <input 
            type="text" 
            id="placa" 
            name="placa" 
            class="form-input"
            placeholder="Ejemplo: ABC1234" 
            required
            maxlength="8"
            pattern="[A-Za-z0-9]+"
            title="Solo letras y números"
          >
          <div class="help-text">
            💡 Ingrese la placa sin espacios ni caracteres especiales
          </div>
        </div>
        
        <button type="submit" class="btn-primary-custom">
          📝 Registrar Entrada
        </button>
      </form>
    </div>

    <!-- Contenido Cámara -->
    <div id="camera-tab" class="tab-content">
      <div class="camera-section">
        <div class="video-container">
          <video id="video" autoplay playsinline></video>
          <canvas id="canvas" style="display: none;"></canvas>
        </div>
        
        <div class="camera-controls">
          <button type="button" id="capturar" class="btn-camera">
            📸 Capturar y Detectar Placa
          </button>
        </div>
        
        <div id="resultado" class="resultado-container"></div>
        
        <form id="camera-form" action="/vehiculos/entrada" method="POST" style="display: none;">
          <input type="hidden" id="placa-detectada" name="placa">
          <button type="submit" class="btn-primary-custom">
            📝 Confirmar Registro
          </button>
        </form>
      </div>
    </div>
    
    <div class="back-container">
      <a href="<%= rol === 'admin' ? '/vehiculos/admin' : '/vehiculos/trabajador' %>" class="back-link">
        ← Volver al panel
      </a>
    </div>
  </div>

  <!-- Bootstrap 5 JS (CDN) -->
  <script
    src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
    crossorigin="anonymous"
  ></script>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      // Elementos del DOM
      const placaInput = document.getElementById('placa');
      const tabButtons = document.querySelectorAll('.tab-btn');
      const tabContents = document.querySelectorAll('.tab-content');
      const video = document.getElementById('video');
      const canvas = document.getElementById('canvas');
      const resultado = document.getElementById('resultado');
      const capturarBtn = document.getElementById('capturar');
      const cameraForm = document.getElementById('camera-form');
      const placaDetectada = document.getElementById('placa-detectada');

      // Funcionalidad de pestañas
      tabButtons.forEach(button => {
        button.addEventListener('click', function() {
          const targetTab = this.getAttribute('data-tab');
          
          // Remover clase active de todos los botones y contenidos
          tabButtons.forEach(btn => btn.classList.remove('active'));
          tabContents.forEach(content => content.classList.remove('active'));
          
          // Agregar clase active al botón clickeado y su contenido
          this.classList.add('active');
          document.getElementById(targetTab + '-tab').classList.add('active');
          
          // Si se selecciona la pestaña de cámara, iniciar cámara
          if (targetTab === 'camera') {
            initCamera();
          }
        });
      });

      // Funcionalidad del formulario manual
      if (placaInput) {
        // Auto-mayúsculas para la placa
        placaInput.addEventListener('input', function(e) {
          e.target.value = e.target.value.toUpperCase();
        });
        
        // Validación en tiempo real
        placaInput.addEventListener('blur', function(e) {
          const value = e.target.value.trim();
          if (value && !/^[A-Z0-9]+$/.test(value)) {
            e.target.style.borderColor = '#e74c3c';
            e.target.style.boxShadow = '0 0 0 3px rgba(231, 76, 60, 0.2)';
          } else {
            e.target.style.borderColor = '#03e9f4';
            e.target.style.boxShadow = '0 0 0 3px rgba(3, 233, 244, 0.2)';
          }
        });

        // Enfocar automáticamente el campo de placa
        placaInput.focus();
      }

      // Confirmación antes de enviar formulario manual
      const manualForm = document.querySelector('#manual-tab form');
      if (manualForm) {
        manualForm.addEventListener('submit', function(e) {
          const placa = placaInput.value.trim();
          if (!confirm(`¿Confirmar registro de entrada para el vehículo ${placa}?`)) {
            e.preventDefault();
          }
        });
      }

      // Funcionalidad de la cámara
      function initCamera() {
        if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {
          navigator.mediaDevices.getUserMedia({ 
            video: { 
              width: { ideal: 1280 },
              height: { ideal: 720 },
              facingMode: 'environment' // Cámara trasera en móviles
            } 
          })
          .then(stream => {
            video.srcObject = stream;
            video.play();
          })
          .catch(err => {
            console.error('Error accediendo a la cámara:', err);
            showResult('❌ No se puede acceder a la cámara. Verifique los permisos.', 'error');
          });
        } else {
          showResult('❌ Su navegador no soporta acceso a la cámara.', 'error');
        }
      }

      // Capturar imagen y detectar placa
      if (capturarBtn) {
        capturarBtn.addEventListener('click', function() {
          if (!video.videoWidth || !video.videoHeight) {
            showResult('❌ La cámara no está lista. Espere un momento.', 'error');
            return;
          }

          // Mostrar estado de procesamiento
          showResult('🔄 Procesando imagen...', 'processing');
          capturarBtn.disabled = true;

          // Capturar imagen del video
          canvas.width = video.videoWidth;
          canvas.height = video.videoHeight;
          const ctx = canvas.getContext('2d');
          ctx.drawImage(video, 0, 0, canvas.width, canvas.height);
          
          // Convertir a base64
          const imgData = canvas.toDataURL('image/jpeg', 0.8);
          
          if (imgData.length < 1000) {
            showResult('❌ Imagen muy pequeña o vacía. Intente nuevamente.', 'error');
            capturarBtn.disabled = false;
            return;
          }

          // Enviar imagen al servidor
          fetch('/api/reconocer', {
            method: 'POST',
            headers: { 
              'Content-Type': 'application/json' 
            },
            body: JSON.stringify({ image: imgData })
          })
          .then(response => response.json())
          .then(data => {
            if (data.placa) {
              showResult(`✅ Placa detectada: ${data.placa}`, 'success');
              placaDetectada.value = data.placa;
              cameraForm.style.display = 'block';
            } else {
              showResult(`❌ ${data.error || 'No se pudo detectar la placa. Intente nuevamente.'}`, 'error');
            }
          })
          .catch(error => {
            console.error('Error:', error);
            showResult('❌ Error al procesar la imagen. Intente nuevamente.', 'error');
          })
          .finally(() => {
            capturarBtn.disabled = false;
          });
        });
      }

      // Mostrar resultado con estilo
      function showResult(message, type) {
        resultado.textContent = message;
        resultado.className = `resultado-container ${type}`;
        
        if (type === 'processing') {
          const spinner = document.createElement('span');
          spinner.className = 'spinner';
          resultado.insertBefore(spinner, resultado.firstChild);
        }
      }

      // Confirmación para formulario de cámara
      if (cameraForm) {
        cameraForm.addEventListener('submit', function(e) {
          const placa = placaDetectada.value;
          if (!confirm(`¿Confirmar registro de entrada para el vehículo ${placa}?`)) {
            e.preventDefault();
          }
        });
      }
    });
  </script>
</body>
</html>